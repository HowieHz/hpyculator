插件事件
=============================================

    开始计算之后，会创建一个新线程分给插件

    单文件插件调用 文件名.py 内的main函数和main_save函数

    文件夹插件调用 文件夹名\__init_.py 内的main函数和main_save函数

    （注：当output_mode为4，只调用main函数）

当output_mode为0，1，2
-----------------------------------

根据input_mode参数，将用户输入处理成float或者str

    调用插件的main函数，

        传入的第一个参数且为唯一一个参数是用户的输入值

    .. code-block:: python

        def main(input)
            #插件主体
            return 你要输出的东西

当output_mode为3
-----------------------------------

根据input_mode参数，将用户输入处理成float或者str

当用户选择不保存（内屏输出）
~~~~~~~~~~~~~~~~~~~~~~~~~

    调用插件的main函数，

        传入的第一个参数是用户的输入值，

        第二个参数是指代主程序的主类（请将第二个参数作为output()的第一个参数）

    .. code-block:: python

        def main(input,self)
            #插件主体，需要输出到内屏的时候使用下面的语句
            output(self,"你要输出的东西")

当用户选择保存
~~~~~~~~~~~~~~~~~~~~~~~~~

    调用插件的main_save函数，

        传入的第一个参数是用户的输入值，

        第二个参数是指代文件流（打开的文件）（请将第二个参数作为write()或者write_without_flush()的第一个参数）

    .. code-block:: python

        def main(input,file)
            #插件主体，需要保存的时候使用下面的语句
            write(file,"你要保存的东西")
            #或者
            write_without_flush(file,"你要保存的东西")
            #记得配合flush(file)使用，不然就和方案1没啥区别了

当output_mode为4
-----------------------------------

根据input_mode参数，将用户输入处理成float或者str

当用户选择不保存（内屏输出）
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    调用插件的main函数，

        传入的第一个参数是用户的输入值，

        第二个参数是指代主程序的主类（请将第二个参数作为output()的第一个参数）

        第三个参数传入的是'output'

当用户选择保存
~~~~~~~~~~~~~~~~~~~~~~~~~

    调用插件的main函数，

        传入的第一个参数是用户的输入值，

        第二个参数是指代文件流（打开的文件）（请将第二个参数作为write()或者write_without_flush()的第一个参数）

        第三个参数传入的是'save'